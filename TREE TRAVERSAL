#include <stdio.h>
#include <stdlib.h>


struct node
{
    int data;
    struct node* left;
    struct node* right;
};


struct node* createNode(int data)
{
    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

struct node* insertLeft(struct node* root, int data)
{
    root->left = createNode(data);
    return root->left;
}

struct node* insertRight(struct node* root, int data)
{
    root->right = createNode(data);
    return root->right;
}

void inorder(struct node* root)
{
    if (root == NULL) return;

    inorder(root->left);
    printf("%d ", root->data);
    inorder(root->right);
}
void postorder(struct node* root)
{
    if (root == NULL) return;

    postorder(root->left);
    postorder(root->right);
    printf("%d ", root->data);
}

int main()
{ printf("B.RISHITHA   192324130 \n");
    struct node* root = createNode(3);
    
    struct node* leftChild = insertLeft(root, 9);
    struct node* rightChild = insertRight(root, 20);
    
    insertLeft(rightChild, 15);
    insertRight(rightChild, 7);

    printf("Inorder traversal of the Tree is : ");
    inorder(root);
    printf("\n");

    printf("Postorder traversal of the Tree is : ");
    postorder(root);

    return 0;
}
